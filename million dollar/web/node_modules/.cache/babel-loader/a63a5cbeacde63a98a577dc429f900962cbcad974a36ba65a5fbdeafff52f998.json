{"ast":null,"code":"var _jsxFileName = \"C:\\\\code\\\\million dollar\\\\web\\\\src\\\\components\\\\DrivePicker.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\n\n// Google Picker API integration for file browsing/upload\n// Requires Google API client to be loaded in index.html\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CLIENT_ID = process.env.REACT_APP_GOOGLE_CLIENT_ID;\nconst API_KEY = process.env.REACT_APP_GOOGLE_API_KEY;\nconst SCOPE = 'https://www.googleapis.com/auth/drive.file https://www.googleapis.com/auth/drive.readonly';\nconst DISCOVERY_DOCS = ['https://www.googleapis.com/discovery/v1/apis/drive/v3/rest'];\nfunction DrivePicker({\n  onPick\n}) {\n  _s();\n  useEffect(() => {\n    if (!window.gapi) return;\n    window.gapi.load('client:picker', async () => {\n      await window.gapi.client.init({\n        apiKey: API_KEY,\n        clientId: CLIENT_ID,\n        discoveryDocs: DISCOVERY_DOCS,\n        scope: SCOPE\n      });\n    });\n  }, []);\n  const openPicker = () => {\n    if (!window.google || !window.google.picker) return;\n    const view = new window.google.picker.DocsView();\n    const picker = new window.google.picker.PickerBuilder().addView(view).setOAuthToken(window.gapi.auth.getToken().access_token).setDeveloperKey(API_KEY).setCallback(data => {\n      if (data.action === window.google.picker.Action.PICKED) {\n        onPick(data.docs);\n      }\n    }).build();\n    picker.setVisible(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: openPicker,\n    children: \"Browse Google Drive\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(DrivePicker, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = DrivePicker;\nexport default DrivePicker;\nvar _c;\n$RefreshReg$(_c, \"DrivePicker\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","CLIENT_ID","process","env","REACT_APP_GOOGLE_CLIENT_ID","API_KEY","REACT_APP_GOOGLE_API_KEY","SCOPE","DISCOVERY_DOCS","DrivePicker","onPick","_s","window","gapi","load","client","init","apiKey","clientId","discoveryDocs","scope","openPicker","google","picker","view","DocsView","PickerBuilder","addView","setOAuthToken","auth","getToken","access_token","setDeveloperKey","setCallback","data","action","Action","PICKED","docs","build","setVisible","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/code/million dollar/web/src/components/DrivePicker.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\n\r\n// Google Picker API integration for file browsing/upload\r\n// Requires Google API client to be loaded in index.html\r\n\r\nconst CLIENT_ID = process.env.REACT_APP_GOOGLE_CLIENT_ID;\r\nconst API_KEY = process.env.REACT_APP_GOOGLE_API_KEY;\r\nconst SCOPE = 'https://www.googleapis.com/auth/drive.file https://www.googleapis.com/auth/drive.readonly';\r\nconst DISCOVERY_DOCS = [\r\n  'https://www.googleapis.com/discovery/v1/apis/drive/v3/rest'\r\n];\r\n\r\nfunction DrivePicker({ onPick }) {\r\n  useEffect(() => {\r\n    if (!window.gapi) return;\r\n    window.gapi.load('client:picker', async () => {\r\n      await window.gapi.client.init({\r\n        apiKey: API_KEY,\r\n        clientId: CLIENT_ID,\r\n        discoveryDocs: DISCOVERY_DOCS,\r\n        scope: SCOPE,\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  const openPicker = () => {\r\n    if (!window.google || !window.google.picker) return;\r\n    const view = new window.google.picker.DocsView();\r\n    const picker = new window.google.picker.PickerBuilder()\r\n      .addView(view)\r\n      .setOAuthToken(window.gapi.auth.getToken().access_token)\r\n      .setDeveloperKey(API_KEY)\r\n      .setCallback(data => {\r\n        if (data.action === window.google.picker.Action.PICKED) {\r\n          onPick(data.docs);\r\n        }\r\n      })\r\n      .build();\r\n    picker.setVisible(true);\r\n  };\r\n\r\n  return (\r\n    <button onClick={openPicker}>Browse Google Drive</button>\r\n  );\r\n}\r\n\r\nexport default DrivePicker;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;;AAExC;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,SAAS,GAAGC,OAAO,CAACC,GAAG,CAACC,0BAA0B;AACxD,MAAMC,OAAO,GAAGH,OAAO,CAACC,GAAG,CAACG,wBAAwB;AACpD,MAAMC,KAAK,GAAG,2FAA2F;AACzG,MAAMC,cAAc,GAAG,CACrB,4DAA4D,CAC7D;AAED,SAASC,WAAWA,CAAC;EAAEC;AAAO,CAAC,EAAE;EAAAC,EAAA;EAC/Bb,SAAS,CAAC,MAAM;IACd,IAAI,CAACc,MAAM,CAACC,IAAI,EAAE;IAClBD,MAAM,CAACC,IAAI,CAACC,IAAI,CAAC,eAAe,EAAE,YAAY;MAC5C,MAAMF,MAAM,CAACC,IAAI,CAACE,MAAM,CAACC,IAAI,CAAC;QAC5BC,MAAM,EAAEZ,OAAO;QACfa,QAAQ,EAAEjB,SAAS;QACnBkB,aAAa,EAAEX,cAAc;QAC7BY,KAAK,EAAEb;MACT,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMc,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAI,CAACT,MAAM,CAACU,MAAM,IAAI,CAACV,MAAM,CAACU,MAAM,CAACC,MAAM,EAAE;IAC7C,MAAMC,IAAI,GAAG,IAAIZ,MAAM,CAACU,MAAM,CAACC,MAAM,CAACE,QAAQ,CAAC,CAAC;IAChD,MAAMF,MAAM,GAAG,IAAIX,MAAM,CAACU,MAAM,CAACC,MAAM,CAACG,aAAa,CAAC,CAAC,CACpDC,OAAO,CAACH,IAAI,CAAC,CACbI,aAAa,CAAChB,MAAM,CAACC,IAAI,CAACgB,IAAI,CAACC,QAAQ,CAAC,CAAC,CAACC,YAAY,CAAC,CACvDC,eAAe,CAAC3B,OAAO,CAAC,CACxB4B,WAAW,CAACC,IAAI,IAAI;MACnB,IAAIA,IAAI,CAACC,MAAM,KAAKvB,MAAM,CAACU,MAAM,CAACC,MAAM,CAACa,MAAM,CAACC,MAAM,EAAE;QACtD3B,MAAM,CAACwB,IAAI,CAACI,IAAI,CAAC;MACnB;IACF,CAAC,CAAC,CACDC,KAAK,CAAC,CAAC;IACVhB,MAAM,CAACiB,UAAU,CAAC,IAAI,CAAC;EACzB,CAAC;EAED,oBACExC,OAAA;IAAQyC,OAAO,EAAEpB,UAAW;IAAAqB,QAAA,EAAC;EAAmB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAE7D;AAACnC,EAAA,CAhCQF,WAAW;AAAAsC,EAAA,GAAXtC,WAAW;AAkCpB,eAAeA,WAAW;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}